syntax="proto3";

import "google/protobuf/timestamp.proto";

package grpc;

enum FileStatusCode {
    Ok = 0;
    Failed = 1;
    InProgress = 2;
    Finished = 3;
    Unknown = 4;
}

service ChatMessages {
    rpc ChatStream(User) returns (stream ChatMessage);
    rpc SendMessage(ChatMessage) returns (RequestSuccess);
    // SendUserInformation sends a User but only with an userName and an userID and returns the whole stored data
    rpc SendUserInformation(User) returns (User);
    rpc SendUserRegistration(UserLogin) returns (RequestSuccess);
    rpc CheckUserLogin(UserLogin) returns (RequestSuccess);
    rpc GetKnownUsers(User) returns (UserArray);
    rpc LoadOldMessages(Chat) returns(stream ChatMessage);
    rpc DeleteProfile(UserLogin) returns (RequestSuccess);
    rpc UploadImage(stream UploadImageRequest) returns (UploadImageResponse);
    rpc DownloadImage(UploadImageResponse) returns (stream UploadImageRequest);

    rpc GetSystemInformation(Empty) returns (SystemInformation);
    rpc GetSystemMetrics(Interval) returns (stream Metrics);
    rpc GetAllUsers(Empty) returns (stream User);
}

message User {
    string userID = 1;
    string userName = 2;
    google.protobuf.Timestamp signUpDate = 3;
    string status = 4;
    string biography = 5;
    string profilePictureDir = 6;
    bool isUserUpdate = 7;
    bool isOnline = 8;
}

message UserArray {
    repeated User user = 1;
}

message ChatMessage {
    string senderID = 1;
    string recipientID = 2;
    string messageText = 3;
    string userName = 4;
    google.protobuf.Timestamp sentAt = 5;
}

message RequestSuccess {
    bool receivedRequest = 1;
}

message UserLogin {
    string userName = 1;
    string password = 2;
}

message Chat {
    string senderID = 1;
    string recipientID = 2;
}

message UploadImageRequest {
    bytes image = 1;
    string fileName = 2;
    FileStatusCode statusCode = 3;
}

message UploadImageResponse {
    User enquiringUser = 1;
    string fileName = 2;
    FileStatusCode statusCode = 3;
}

// only for admin tool
message Metrics {
    float cpuUsageP = 1;
    float ramUsageP = 2;
    float ramUsageV = 3;
    float upload = 4;
    float download = 5;
    float usedDiskSpaceP = 6;
    float usedDiskSpaceV = 7;
}

message SystemInformation {
    string os = 1;
    string version = 2;
    string cpuName = 3;
    uint32 cpuCores = 4;
    uint32 cpuThreads = 5;
    float installedRam = 6;
    string ipAddress = 7;
    string macAddress = 8;
}

message Interval {
    uint32 seconds = 1;
}

message Empty { }