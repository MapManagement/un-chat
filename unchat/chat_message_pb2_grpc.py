# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import unchat.chat_message_pb2 as chat__message__pb2


class ChatMessagesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
<<<<<<< HEAD
        self.GetNewMessages = channel.unary_unary(
                '/grpc.ChatMessages/GetNewMessages',
=======
        self.ChatStream = channel.unary_stream(
                '/grpc.ChatMessages/ChatStream',
>>>>>>> 5c56dbb (updated protobuf and generated code)
                request_serializer=chat__message__pb2.User.SerializeToString,
                response_deserializer=chat__message__pb2.ChatMessage.FromString,
                )
        self.SendNewMessages = channel.unary_unary(
                '/grpc.ChatMessages/SendNewMessages',
                request_serializer=chat__message__pb2.ChatMessage.SerializeToString,
                response_deserializer=chat__message__pb2.RequestSuccess.FromString,
                )


class ChatMessagesServicer(object):
    """Missing associated documentation comment in .proto file."""

<<<<<<< HEAD
    def GetNewMessages(self, request, context):
=======
    def ChatStream(self, request, context):
>>>>>>> 5c56dbb (updated protobuf and generated code)
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendNewMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatMessagesServicer_to_server(servicer, server):
    rpc_method_handlers = {
<<<<<<< HEAD
            'GetNewMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewMessages,
=======
            'ChatStream': grpc.unary_stream_rpc_method_handler(
                    servicer.ChatStream,
>>>>>>> 5c56dbb (updated protobuf and generated code)
                    request_deserializer=chat__message__pb2.User.FromString,
                    response_serializer=chat__message__pb2.ChatMessage.SerializeToString,
            ),
            'SendNewMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.SendNewMessages,
                    request_deserializer=chat__message__pb2.ChatMessage.FromString,
                    response_serializer=chat__message__pb2.RequestSuccess.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.ChatMessages', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatMessages(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
<<<<<<< HEAD
    def GetNewMessages(request,
=======
    def ChatStream(request,
>>>>>>> 5c56dbb (updated protobuf and generated code)
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
<<<<<<< HEAD
        return grpc.experimental.unary_unary(request, target, '/grpc.ChatMessages/GetNewMessages',
=======
        return grpc.experimental.unary_stream(request, target, '/grpc.ChatMessages/ChatStream',
>>>>>>> 5c56dbb (updated protobuf and generated code)
            chat__message__pb2.User.SerializeToString,
            chat__message__pb2.ChatMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendNewMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.ChatMessages/SendNewMessages',
            chat__message__pb2.ChatMessage.SerializeToString,
            chat__message__pb2.RequestSuccess.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
